{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["colors","theme","fontSizes","fonts","StyledContainer","styled","Section","mixins","flexCenter","StyledArchiveLink","Link","inlineLink","Raleway","sm","StyledGrid","div","media","desktop","StyledProjectInner","boxShadow","flexBetween","borderRadius","transition","background_secondary","StyledProject","StyledProjectHeader","StyledFolder","accent","StyledProjectLinks","textSecondary","StyledIconLink","a","StyledProjectName","h5","xxl","textPrimary","StyledProjectDescription","StyledTechList","ul","xs","StyledMoreButton","Button","ProjectsPage","data","useState","showMore","setShowMore","revealTitle","useRef","revealArchiveLink","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","projects","edges","filter","node","firstSix","slice","projectsToShow","isHome","animateNav","footer","rel","href","to","className","map","frontmatter","html","github","external","title","tech","key","classNames","timeout","exit","el","tabIndex","style","transitionDelay","name","target","aria-label","dangerouslySetInnerHTML","__html","onClick"],"mappings":"wYAaQA,EAA6BC,IAA7BD,OAAQE,EAAqBD,IAArBC,UAAWC,EAAUF,IAAVE,MAErBC,EAAkBC,YAAOC,KAAV,4EAAGD,CAAH,qFACjBE,IAAOC,YAMLC,EAAoBJ,YAAOK,KAAV,8EAAGL,CAAH,6FACnBE,IAAOI,WAGMR,EAAMS,QACRV,EAAUW,IAKnBC,EAAaT,IAAOU,IAAV,uEAAGV,CAAH,2IAOVW,IAAMC,QAPI,MAUVC,EAAqBb,IAAOU,IAAV,+EAAGV,CAAH,mKACpBE,IAAOY,UACPZ,IAAOa,YAMQnB,IAAMoB,aACTpB,IAAMqB,WACAtB,EAAOuB,sBAEvBC,EAAgBnB,IAAOU,IAAV,0EAAGV,CAAH,8FACHJ,IAAMqB,WAKhBJ,GAKAO,EAAsBpB,IAAOU,IAAV,gFAAGV,CAAH,4BACrBE,IAAOa,aAGLM,EAAerB,IAAOU,IAAV,yEAAGV,CAAH,2CACPL,EAAO2B,QAMZC,EAAqBvB,IAAOU,IAAV,+EAAGV,CAAH,kCAEbL,EAAO6B,eAEZC,EAAiBzB,IAAO0B,EAAV,2EAAG1B,CAAH,2EASd2B,EAAoB3B,IAAO4B,GAAV,8EAAG5B,CAAH,6CAERH,EAAUgC,IACdlC,EAAOmC,aAEZC,EAA2B/B,IAAOU,IAAV,sFAAGV,CAAH,qCAEnBL,EAAO6B,cAEZtB,IAAOI,YAGP0B,EAAiBhC,IAAOiC,GAAV,4EAAGjC,CAAH,4NASDF,EAAMS,QACRV,EAAUqC,GACdvC,EAAO6B,eAQdW,EAAmBnC,YAAOoC,KAAV,8EAAGpC,CAAH,0BAmHPqC,UA/GM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACDC,oBAAS,GAAlCC,EAD0B,KAChBC,EADgB,KAE3BC,EAAcC,iBAAO,MACrBC,EAAoBD,iBAAO,MAC3BE,EAAcF,iBAAO,MACrBG,EAAiBH,iBAAO,IAE9BI,qBAAU,WACRC,IAAGC,OAAOP,EAAYQ,QAASC,sBAC/BH,IAAGC,OAAOL,EAAkBM,QAASC,sBACrCH,IAAGC,OAAOJ,EAAYK,QAASC,sBAC/BL,EAAeI,QAAQE,SAAQ,SAACC,EAAKC,GAAN,OAAYN,IAAGC,OAAOI,EAAKF,mBAAa,IAAJG,SAClE,IAEH,IACMC,EAAWjB,EAAKiB,SAASC,MAAMC,QAAO,qBAAGC,QACzCC,EAAWJ,EAASK,MAAM,EAFb,GAGbC,EAAiBrB,EAAWe,EAAWI,EAE7C,OACE,kBAAC,IAAD,CAAQG,QAAQ,EAAOC,YAAY,EAAOC,QAAQ,GAChD,kBAAC,IAAD,KACE,0DACA,0BAAMC,IAAI,YAAYC,KAAK,uCAE7B,kBAACnE,EAAD,KACE,kBAAC,IAAD,CAASsD,IAAKX,GAAd,YACA,yBAAKW,IAAKT,GACR,kBAACxC,EAAD,CAAmB+D,GAAG,YAAtB,qBAKF,kBAAC1D,EAAD,CAAY4C,IAAKR,GACf,kBAAC,IAAD,CAAiBuB,UAAU,YACxBP,GACCA,EAAeQ,KAAI,WAAWf,GAAO,IAAfI,EAAc,EAAdA,KACZY,EAAsBZ,EAAtBY,YAAaC,EAASb,EAATa,KACbC,EAAkCF,EAAlCE,OAAQC,EAA0BH,EAA1BG,SAAUC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KACjC,OACE,kBAAC,IAAD,CACEC,IAAKtB,EACLuB,WAAW,SACXC,QAASxB,GA7BR,EA6B6C,KAAlBA,EA7B3B,GA6BmD,IACpDyB,MAAM,GACN,kBAAC5D,EAAD,CACEyD,IAAKtB,EACLD,IAAK,SAAA2B,GAAE,OAAKlC,EAAeI,QAAQI,GAAK0B,GACxCC,SAAS,IACTC,MAAO,CACLC,iBAAoB7B,GApCvB,EAoC4D,KAAlBA,EApC1C,GAoCkE,GAAhD,OAEjB,kBAACzC,EAAD,KACE,gCACE,kBAACO,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAe+D,KAAK,YAEtB,kBAAC7D,EAAD,KACGiD,GACC,kBAAC/C,EAAD,CACEyC,KAAMM,EACNa,OAAO,SACPpB,IAAI,+BACJqB,aAAW,eACX,kBAAC,IAAD,CAAeF,KAAK,YAGvBX,GACC,kBAAChD,EAAD,CACEyC,KAAMO,EACNY,OAAO,SACPpB,IAAI,+BACJqB,aAAW,iBACX,kBAAC,IAAD,CAAeF,KAAK,gBAK5B,kBAACzD,EAAD,KAAoB+C,GACpB,kBAAC3C,EAAD,CAA0BwD,wBAAyB,CAAEC,OAAQjB,MAE/D,gCACGI,GACC,kBAAC3C,EAAD,KACG2C,EAAKN,KAAI,SAACM,EAAMrB,GAAP,OACR,wBAAIsB,IAAKtB,GAAIqB,gBAarC,kBAACxC,EAAD,CAAkBsD,QAAS,kBAAMhD,GAAaD,KAA9C,QACQA,EAAW,OAAS","file":"component---src-pages-projects-js-6b4b1da9e5c6609c52f4.js","sourcesContent":["//Projects page taken and modified from https://github.com/bchiang7/v4\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport sr from '@utils/sr';\r\nimport { srConfig } from '@config';\r\nimport { Layout } from '@components';\r\nimport { FormattedIcon } from '@components/icons';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Section, Button, Heading } from '@styles';\r\nconst { colors, fontSizes, fonts } = theme;\r\n\r\nconst StyledContainer = styled(Section)`\r\n  ${mixins.flexCenter};\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding-bottom: 50px;\r\n  width: 80vw;\r\n`;\r\nconst StyledArchiveLink = styled(Link)`\r\n  ${mixins.inlineLink};\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  font-family: ${fonts.Raleway};\r\n  font-size: ${fontSizes.sm};\r\n  &:after {\r\n    bottom: 0.1em;\r\n  }\r\n`;\r\nconst StyledGrid = styled.div`\r\n  margin-top: 50px;\r\n  .projects {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 15px;\r\n    position: relative;\r\n    ${media.desktop`grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));`};\r\n  }\r\n`;\r\nconst StyledProjectInner = styled.div`\r\n  ${mixins.boxShadow};\r\n  ${mixins.flexBetween};\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  padding: 2rem 1.75rem;\r\n  height: 100%;\r\n  border-radius: ${theme.borderRadius};\r\n  transition: ${theme.transition};\r\n  background-color: ${colors.background_secondary};\r\n`;\r\nconst StyledProject = styled.div`\r\n  transition: ${theme.transition};\r\n  cursor: default;\r\n  &:hover,\r\n  &:focus {\r\n    outline: 0;\r\n    ${StyledProjectInner} {\r\n      transform: translateY(-5px);\r\n    }\r\n  }\r\n`;\r\nconst StyledProjectHeader = styled.div`\r\n  ${mixins.flexBetween};\r\n  margin-bottom: 30px;\r\n`;\r\nconst StyledFolder = styled.div`\r\n  color: ${colors.accent};\r\n  svg {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`;\r\nconst StyledProjectLinks = styled.div`\r\n  margin-right: -10px;\r\n  color: ${colors.textSecondary};\r\n`;\r\nconst StyledIconLink = styled.a`\r\n  position: relative;\r\n  top: -10px;\r\n  padding: 10px;\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`;\r\nconst StyledProjectName = styled.h5`\r\n  margin: 0 0 10px;\r\n  font-size: ${fontSizes.xxl};\r\n  color: ${colors.textPrimary};\r\n`;\r\nconst StyledProjectDescription = styled.div`\r\n  font-size: 17px;\r\n  color: ${colors.textSecondary};\r\n  a {\r\n    ${mixins.inlineLink};\r\n  }\r\n`;\r\nconst StyledTechList = styled.ul`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-grow: 1;\r\n  flex-wrap: wrap;\r\n  padding: 0;\r\n  margin: 20px 0 0 0;\r\n  list-style: none;\r\n  li {\r\n    font-family: ${fonts.Raleway};\r\n    font-size: ${fontSizes.xs};\r\n    color: ${colors.textSecondary};\r\n    line-height: 1.75;\r\n    margin-right: 15px;\r\n    &:last-of-type {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n`;\r\nconst StyledMoreButton = styled(Button)`\r\n  margin: 100px auto 0;\r\n`;\r\n\r\nconst ProjectsPage = ({ data }) => {\r\n  const [showMore, setShowMore] = useState(false);\r\n  const revealTitle = useRef(null);\r\n  const revealArchiveLink = useRef(null);\r\n  const revealTable = useRef(null);\r\n  const revealProjects = useRef([]);\r\n\r\n  useEffect(() => {\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealArchiveLink.current, srConfig());\r\n    sr.reveal(revealTable.current, srConfig());\r\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 100)));\r\n  }, []);\r\n\r\n  const GRID_LIMIT = 6;\r\n  const projects = data.projects.edges.filter(({ node }) => node);\r\n  const firstSix = projects.slice(0, GRID_LIMIT);\r\n  const projectsToShow = showMore ? projects : firstSix;\r\n\r\n  return (\r\n    <Layout isHome={false} animateNav={false} footer={true}>      \r\n      <Helmet>\r\n        <title>Projects | Howard Tseng</title>\r\n        <link rel=\"canonical\" href=\"https://howardt12345.com/projects\" />\r\n      </Helmet>\r\n      <StyledContainer>\r\n        <Heading ref={revealTitle}>Projects</Heading>\r\n        <div ref={revealArchiveLink}>\r\n          <StyledArchiveLink to=\"/archive\">\r\n            View the archive\r\n          </StyledArchiveLink>\r\n        </div>\r\n\r\n        <StyledGrid ref={revealTable}>\r\n          <TransitionGroup className=\"projects\">\r\n            {projectsToShow &&\r\n              projectsToShow.map(({ node }, i) => {\r\n                const { frontmatter, html } = node;\r\n                const { github, external, title, tech } = frontmatter;\r\n                return (\r\n                  <CSSTransition\r\n                    key={i}\r\n                    classNames=\"fadeup\"\r\n                    timeout={i >= GRID_LIMIT ? (i - GRID_LIMIT) * 300 : 300}\r\n                    exit={false}>\r\n                    <StyledProject\r\n                      key={i}\r\n                      ref={el => (revealProjects.current[i] = el)}\r\n                      tabIndex=\"0\"\r\n                      style={{\r\n                        transitionDelay: `${i >= GRID_LIMIT ? (i - GRID_LIMIT) * 100 : 0}ms`,\r\n                      }}>\r\n                      <StyledProjectInner>\r\n                        <header>\r\n                          <StyledProjectHeader>\r\n                            <StyledFolder>\r\n                              <FormattedIcon name=\"Folder\" />\r\n                            </StyledFolder>\r\n                            <StyledProjectLinks>\r\n                              {github && (\r\n                                <StyledIconLink\r\n                                  href={github}\r\n                                  target=\"_blank\"\r\n                                  rel=\"nofollow noopener noreferrer\"\r\n                                  aria-label=\"GitHub Link\">\r\n                                  <FormattedIcon name=\"GitHub\" />\r\n                                </StyledIconLink>\r\n                              )}\r\n                              {external && (\r\n                                <StyledIconLink\r\n                                  href={external}\r\n                                  target=\"_blank\"\r\n                                  rel=\"nofollow noopener noreferrer\"\r\n                                  aria-label=\"External Link\">\r\n                                  <FormattedIcon name=\"External\" />\r\n                                </StyledIconLink>\r\n                              )}\r\n                            </StyledProjectLinks>\r\n                          </StyledProjectHeader>\r\n                          <StyledProjectName>{title}</StyledProjectName>\r\n                          <StyledProjectDescription dangerouslySetInnerHTML={{ __html: html }} />\r\n                        </header>\r\n                        <footer>\r\n                          {tech && (\r\n                            <StyledTechList>\r\n                              {tech.map((tech, i) => (\r\n                                <li key={i}>{tech}</li>\r\n                              ))}\r\n                            </StyledTechList>\r\n                          )}\r\n                        </footer>\r\n                      </StyledProjectInner>\r\n                    </StyledProject>\r\n                  </CSSTransition>\r\n                );\r\n              })}\r\n          </TransitionGroup>\r\n        </StyledGrid>\r\n\r\n        <StyledMoreButton onClick={() => setShowMore(!showMore)}>\r\n          Show {showMore ? 'Less' : 'More'}\r\n        </StyledMoreButton>\r\n      </StyledContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nProjectsPage.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProjectsPage;\r\n\r\nexport const pageQuery = graphql`\r\n{\r\n  projects: allMarkdownRemark(\r\n    filter: {\r\n      fileAbsolutePath: { regex: \"/projects/\" }\r\n      frontmatter: { showInProjects: { ne: false } }\r\n    }\r\n    sort: { fields: [frontmatter___date], order: DESC }\r\n  ) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          tech\r\n          github\r\n          external\r\n        }\r\n        html\r\n      }\r\n    }\r\n  }\r\n}\r\n`;"],"sourceRoot":""}